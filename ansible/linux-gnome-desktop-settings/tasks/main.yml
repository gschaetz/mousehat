---
- include_vars:
    file: "{{ gnomeSettings }}"
    name: settings

# remove plugins
- name: removes directory for plugins
  file: 
    path: "{{ local_home }}/.local/share/gnome-shell/extensions/"
    state: absent
    
# create main directory 
- name: Creates directory for plugins
  file: 
    path: "{{ local_home }}/.local/share/gnome-shell/extensions/{{ item.value.extension_name }}/"
    state: directory
  with_dict: '{{ settings.gnome_extensions | default({}) }}'
  when: settings.gnome_extensions is defined

- name: install shell-extensions when archive
  unarchive:
    src: "{{ item.value.extension_url }}"
    dest: "{{ local_home }}/.local/share/gnome-shell/extensions/{{ item.value.extension_name }}/"
    remote_src: yes
  when: item.value.download_type == "archive" and settings.gnome_extensions is defined 
  with_dict: '{{ settings.gnome_extensions | default({}) }}'

- name: install shell-extensions when git
  git:
    repo: "{{ item.value.extension_url }}"
    dest: "{{ local_home }}/.local/share/gnome-shell/extensions/{{ item.value.extension_name }}/"
  when: item.value.download_type == "git" and settings.gnome_extensions is defined
  with_dict: '{{ settings.gnome_extensions | default({}) }}' 
  
- name: set gnome settings
  shell: dconf write {{ item.value.setting }}
  with_dict: '{{ settings.gnome | default({}) }}'

- name: delete background
  file:
    path: "{{ desktop_dir }}/resources/background.jpg"
    state: absent

- name: delete screensaver background
  file:
    path: "{{ desktop_dir }}/resources/screensaver_background.jpg"
    state: absent

- name: download background image
  get_url:
    url: "{{ item.value.background_url }}"
    dest: "{{ desktop_dir }}/resources/background.jpg"
    mode: 0440
  when: item.value.type == "background" and settings.gnome_background is defined
  with_dict: '{{ settings.gnome_background | default({}) }}'

- name: download screensaver image
  get_url:
    url: "{{ item.value.background_url }}"
    dest: "{{ desktop_dir }}/resources/screensaver_background.jpg"
    mode: 0440
  when: item.value.type == "screensaver" and settings.gnome_background is defined
  with_dict: '{{ settings.gnome_background | default({}) }}'

- name: set background image
  shell: gsettings set org.gnome.desktop.background picture-uri file:///{{ desktop_dir }}/resources/background.jpg    
  when: item.value.type == "background" and settings.gnome_background is defined
  with_dict: '{{ settings.gnome_background | default({}) }}'

- name: set screensaver background image
  shell: gsettings set org.gnome.desktop.screensaver picture-uri file:///{{ desktop_dir }}/resources/screensaver_background.jpg    
  when: item.value.type == "screensaver" and settings.gnome_background is defined 
  with_dict: '{{ settings.gnome_background | default({}) }}'

- name: Create start script in tmp
  template:
    src: "{{ project_home }}/templates/start-script-gnome.j2"
    dest: "/usr/local/bin/startup.sh"
    mode: 0777
  become: true

# added .xinit for all window managers
- name: Create .xinit file
  template:
    src: "{{ project_home }}/templates/xinit.j2"
    dest: "{{ local_home }}/.xinit"
    mode: 0777
  become: true
  when: 
    - settings['x11_config'] is defined
    - settings['x11_config']['user_x11_config_files'] 

- name: Create symbolic link for .xsession
  file:
    src: "{{ local_home }}/.xinit"
    dest: "{{ local_home }}/.xsession"
    state: link
  when: 
    - settings['x11_config'] is defined
    - settings['x11_config']['user_x11_config_files'] 

- name: Create symbolic link for .xsessionrc
  file:
    src: "{{ local_home }}/.xinit"
    dest: "{{ local_home }}/.xsessionrc"
    state: link
  when:
    - settings['x11_config'] is defined
    - settings['x11_config']['user_x11_config_files'] 
